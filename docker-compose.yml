services:
  postgres:
    image: postgres:15
    container_name: pydantic_ai_postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: pydantic_ai
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts:/docker-entrypoint-initdb.d
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - postgres_network

  pgadmin:
    image: dpage/pgadmin4
    container_name: pydantic_ai_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    restart: unless-stopped
    networks:
      - postgres_network

# https://github.com/stuzero/pg-mcp-server/tree/main
  pg-mcp:
    image: pg-mcp:latest
    container_name: pg-mcp
    ports:
      - "8000:8000"
    environment:
      - LOG_LEVEL=DEBUG
      - PYTHONUNBUFFERED=1
    # volumes:
    #   # For development: mount app directory to enable hot-reloading
    #   - ./server:/app/server
    restart: unless-stopped
    networks:
      - postgres_network

networks:
  postgres_network:
    driver: bridge

volumes:
  postgres_data:
  pgadmin_data:
